# -*- coding: utf-8 -*-
"""TugasPenggantuUTS_Kelompok 5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jQEyQN2Se4b4-vLg0mZta5kacuiveFyC

Tugas Pengganti UTS
Pembelajaran Secara Statistik dan Optimisasi

Kelompok 5 :
Eko Rahayu - 2101181004
Aan Eko Setiawan -2101182032
Angga Juliat - 2101181003

Data yang digunakan adalah data mengenai Health Insurance Cross Sell Prediction

Data ini ditujakan untuk perusahaan asuransi yang telah memberikan Asuransi Kesehatan kepada para pelanggannya. Namun saat ini dibutuhkan untuk membangun model untuk memprediksi apakah pemegang polis (pelanggan) tahun lalu juga akan tertarik dengan Asuransi Kendaraan yang disediakan oleh perusahaan tersebut.

dalam membangun model untuk memprediksi apakah pelanggan akan tertarik dengan Asuransi Kendaraan yang dapat membantu perusahaan karena kemudian dapat merencanakan strategi komunikasinya untuk menjangkau pelanggan tersebut dan mengoptimalkan model bisnis dan pendapatannya.

Sekarang, untuk memprediksi, apakah pelanggan akan tertarik dengan asuransi Kendaraan, Anda memiliki informasi tentang demografi (jenis kelamin, usia, jenis kode wilayah), Kendaraan (Usia Kendaraan, Kerusakan), Polis (Premium, saluran sumber) dll.

Data yang digunakan adalah
1. data train
2. data set

di dalam data tersebut ada beberapa label, seperti

**Data Description**
**Train Data**

1. id	Unique ID for the customer
2. Gender	Gender of the customer
3. Age	Age of the customer
4. Driving_License	0 : Customer does not have DL, 1 : Customer already has DL
5. Region_Code	Unique code for the region of the customer
6. Previously_Insured	1 : Customer already has Vehicle Insurance, 0 : Customer doesn't have Vehicle Insurance
7. Vehicle_Age	Age of the Vehicle
8. Vehicle_Damage	1 : Customer got his/her vehicle damaged in the past. 0 : Customer didn't get his/her vehicle damaged in the past.
9. Annual_Premium	The amount customer needs to pay as premium in the year
10. PolicySalesChannel	Anonymized Code for the channel of outreaching to the customer ie. Different Agents, Over Mail, Over Phone, In Person, etc.
11. Vintage	Number of Days, Customer has been associated with the company
Response	1 : Customer is interested, 0 : Customer is not interested

**Test Data**
**Variable	Definition**
1. id	Unique ID for the customer
2. Gender	Gender of the customer
3. Age	Age of the customer
4. Driving_License	0 : Customer does not have DL, 1 : Customer already has DL
5. Region_Code	Unique code for the region of the customer
6. Previously_Insured	1 : Customer already has Vehicle Insurance, 0 : Customer doesn't have Vehicle Insurance
7. Vehicle_Age	Age of the Vehicle
8. Vehicle_Damage	1 : Customer got his/her vehicle damaged in the past. 0 : Customer didn't get his/her vehicle damaged in the past.
9. Annual_Premium	The amount customer needs to pay as premium in the year
10. PolicySalesChannel	Anonymised Code for the channel of outreaching to the customer ie. Different Agents, Over Mail, Over Phone, In Person, etc.
Vintage	Number of Days, Customer has been associated with the company

Dataset Resource : 
1. https://kaggle.com
2. https://www.kaggle.com/anmolkumar/health-insurance-cross-sell-prediction?select=test.csv

Atribut yang digunakan untuk melakukan klasifikasi yaitu
1. Policy_Sales_Channel 
2. Vintage
3. Previously_Insured

terhadap label Response
"""

#upload data train
from google.colab import files
data_to_load = files.upload()

#upload data test
from google.colab import files
data_to_load2 = files.upload()

print (data_to_load['train.csv'][:200].decode('utf-8') + '...')

#import library
import pandas as pd
import io

data_train = pd.read_csv(io.StringIO(data_to_load['train.csv'].decode('utf-8')))
data_test = pd.read_csv(io.StringIO(data_to_load2['test.csv'].decode('utf-8')))

print(data_train.columns.tolist())
print(data_test.columns.tolist())

"""data train akan melakukan training untuk mengklasifikasikan response pelanggan berdasarkan nilai atau keterangan pada label Vehicle_Age, Vehicle_Damage, dan Previously_Damage"""

label_data_train = data_train['Response'].to_numpy()

train_data = data_train[['Policy_Sales_Channel','Vintage','Previously_Insured']]

print (train_data)

"""selanjutnya membagi data train menjadi 2, yaitu terdiri dari :
1. data train
2. data test
"""

from sklearn.model_selection import train_test_split

X_train, X_test, Y_train, Y_test = train_test_split(train_data, label_data_train, random_state=0)

"""Training set digunakan untuk meembuat model menggunakan metode SVM"""

from sklearn.svm import LinearSVC

svc = LinearSVC()
svc.fit(X_train, Y_train)


Y_prediction = svc.predict(X_test)

"""menghitung nilai akurasi pada data train menggunakan library sklearn"""

from sklearn.metrics import confusion_matrix

tn, fn, tp, fp = confusion_matrix(Y_test, Y_prediction).ravel()
akurasi = (tn + tp) / (tn+fn+fp+tp)

print(akurasi)

"""Melakukan testing pada data train yang sudah dilakukan proses split data"""

tes_data = data_test[['Policy_Sales_Channel','Vintage','Previously_Insured']]

Y_prediction_test = svc.predict(tes_data)
print(Y_prediction_test)

"""Source :
https://www.youtube.com/watch?v=O0JiPhjv5U8&t=903s
https://www.youtube.com/watch?v=e-FoUNAp7kQ&t=10s
"""